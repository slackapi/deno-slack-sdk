import { getFunctionName, renderImport } from "./template.ts";

const autogeneratedComment = () => {
  return `/** This file was autogenerated, but it must be edited to by a dev to make the test pass **/`;
};

export const SlackTestFunctionTemplate = (callbackId: string) => {
  const functionFileImport = renderImport(callbackId);
  const functionName = getFunctionName(callbackId);
  return `
    ${autogeneratedComment()}
    import { assertEquals } from "../../../dev_deps.ts";
    import { ManifestFunctionSchema } from "../../../manifest/manifest_schema.ts";
    ${functionFileImport}

    Deno.test("${functionName} generates a consistent FunctionManifest", () => {
      assertEquals(${functionName}.definition.callback_id, ""); // add the function callback id here
      const expected: ManifestFunctionSchema = { // populate with actual field values
        source_file: "",
        title: "",
        description: "",
        input_parameters: {
          required: [],
          properties: {},
        },
        output_parameters: {
          required: [],
          properties: {},
        },
      };
      const actual = ${functionName}.export();
      assertEquals(actual, expected);
    });    

  `;
};
