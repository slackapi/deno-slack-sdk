import { getFunctionName, renderFunctionImport } from "./template_utils.ts";

const autogeneratedComment = () => {
  const time = new Date();
  return `/** This file was autogenerated on ${time.toDateString()} Follow the steps in src/schema/slack/functions/README.md to rebuild **/`;
};

export const SlackTestFunctionTemplate = (callbackId: string) => {
  const functionFileImport = renderFunctionImport(callbackId);
  const functionName = getFunctionName(callbackId);
  return `
    ${autogeneratedComment()}
    import { assertEquals } from "../../../dev_deps.ts";
    import { ManifestFunctionSchema } from "../../../manifest/manifest_schema.ts";
    ${functionFileImport}

    Deno.test("${functionName} generates a consistent FunctionManifest", () => {
      assertEquals(${functionName}.definition.callback_id, ""); // add the function callback id here
      const expected: ManifestFunctionSchema = { // populate with actual field values
        source_file: "",
        title: "",
        description: "",
        input_parameters: {
          required: [],
          properties: {},
        },
        output_parameters: {
          required: [],
          properties: {},
        },
      };
      const actual = ${functionName}.export();
      assertEquals(actual, expected);
    });    

  `;
};
