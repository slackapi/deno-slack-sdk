import {
  autogeneratedComment,
  getFunctionName,
  renderFunctionImport,
} from "./template_utils.ts";
import { DefineFunctionInput } from "../types.ts";

const renderFunctionPropWithType = (defineFunctionInput: DefineFunctionInput) =>
  `${getFunctionName(defineFunctionInput.callbackId)}: ${
    getFunctionName(defineFunctionInput.callbackId)
  }`;

export const SlackFunctionModTemplate = (
  defineFunctionInputs: DefineFunctionInput[],
) => {
  const callbackIds = defineFunctionInputs.map((dfi) => dfi.callbackId);
  const typescript: string[] = [];
  typescript.push(autogeneratedComment());
  callbackIds.forEach((callbackId) => {
    typescript.push(renderFunctionImport(callbackId));
  });

  typescript.push("");
  typescript.push(
    `const SlackFunctions = {${
      defineFunctionInputs.map((dfi) => renderFunctionPropWithType(dfi)).join(
        ",",
      )
    }} as const;`,
  );
  typescript.push("");
  typescript.push(`export default SlackFunctions;`);

  return typescript.join("\n");
};

export default SlackFunctionModTemplate;
