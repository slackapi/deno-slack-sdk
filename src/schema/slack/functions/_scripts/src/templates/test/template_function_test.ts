// export { assertEquals } from "https://deno.land/std@0.152.0/testing/asserts.ts";
// import {
//   autogeneratedComment,
//   getDefineFunctionInput,
//   getFunctionName,
//   getManifestFunctionSchema,
//   renderFunctionImport,
// } from "../template_utils.ts";
// import {
//   ManifestFunctionSchema,
// } from "../../../../../../../manifest/manifest_schema.ts";
// import { DefineFunctionInput, FunctionRecord } from "../types.ts";
// import { assertEquals } from "https://deno.land/std@0.152.0/testing/asserts.ts";
// import SchemaTypes from "../../../../../../schema_types.ts";
// import SlackTypes from "../../../../../schema_types.ts";
// import { InternalSlackTypes } from "../../../../../types/custom/mod.ts";
// import { manifestFunctionFieldsToTypeScript } from "../template_function.ts";

// const DESCRIPTION = "Test the built-in function template";
// const TITLE = "test function";
// const CALLBACK_ID = "test_function";
// const SOURCE_FILE = "";

// Deno.test("getDefineFunctionInput should return proper callback_id", async () => {
//   const functionSchema: ManifestFunctionSchema = {
//     description: DESCRIPTION,
//     input_parameters: {
//       properties: {
//         metadata: {
//           additionalProperties: true,
//           description:
//             "Metadata you post to Slack is accessible to any app or user who is a member of that workspace",
//           properties: {
//             event_payload: {
//               type: SchemaTypes.object,
//             },
//             event_type: {
//               type: SchemaTypes.string,
//             },
//           },
//           required: [
//             "event_type",
//             "event_payload",
//           ],
//           type: SchemaTypes.object,
//         },
//       },
//       required: [],
//     },
//     output_parameters: {
//       properties: {},
//       required: [],
//     },
//     source_file: SOURCE_FILE,
//     title: TITLE,
//   };
//   const typesript = manifestFunctionFieldsToTypeScript(functionSchema);

//   Deno.e;
//   const { files } = await Deno.emit(`./${CALLBACK_ID}.ts`, {
//     sources: {
//       "/mod.ts": `import * as a from "./a.ts";\nconsole.log(a);\n`,
//       "/a.ts": `export const a: Record<string, string> = {};\n`,
//     },
//   });
//   assertEquals(actual, expected);
// });
