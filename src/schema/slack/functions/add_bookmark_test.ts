/** This file was autogenerated on Tue Feb 07 2023. Follow the steps in src/schema/slack/functions/README.md to rebuild **/
import { assertEquals } from "../../../dev_deps.ts";
import { DefineWorkflow } from "../../../workflows/mod.ts";
import { ManifestFunctionSchema } from "../../../manifest/manifest_schema.ts";
import SchemaTypes from "../../schema_types.ts";
import SlackTypes from "../schema_types.ts";
import AddBookmark from "./add_bookmark.ts";

Deno.test("AddBookmark generates valid FunctionManifest", () => {
  assertEquals(
    AddBookmark.definition.callback_id,
    "slack#/functions/add_bookmark",
  );
  const expected: ManifestFunctionSchema = {
    source_file: "",
    title: "Add bookmark to channel",
    description: "Add a bookmark to a channel",
    input_parameters: {
      properties: {
        channel_id: {
          type: SlackTypes.channel_id,
          description: "Search all channels",
        },
        name: {
          type: SchemaTypes.string,
          description: "Enter the bookmark name",
        },
        link: {
          type: SchemaTypes.string,
          description: "https://docs.acme.com",
        },
      },
      required: ["channel_id", "name", "link"],
    },
    output_parameters: {
      properties: {
        channel_id: { type: SlackTypes.channel_id, description: "Channel" },
        bookmark_name: {
          type: SchemaTypes.string,
          description: "Bookmark name",
        },
        bookmark_link: {
          type: SchemaTypes.string,
          description: "Bookmark link",
        },
      },
      required: ["channel_id", "bookmark_name", "bookmark_link"],
    },
  };
  const actual = AddBookmark.export();

  assertEquals(actual, expected);
});

Deno.test("AddBookmark can be used as a built-in function in a workflow step", () => {
  const testWorkflow = DefineWorkflow({
    callback_id: "test_AddBookmark_built_in",
    title: "Test AddBookmark",
    description: "This is a generated test to test AddBookmark",
  });
  testWorkflow.addStep(AddBookmark, {
    channel_id: "test",
    name: "test",
    link: "test",
  });
  const actual = testWorkflow.steps[0].export();

  assertEquals(actual.function_id, "slack#/functions/add_bookmark");
  assertEquals(actual.inputs, {
    channel_id: "test",
    name: "test",
    link: "test",
  });
});
